# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: MAIN - Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  APP_NAME: bestborirak-client-test-action
  CONTAINER_REPOSITORY: "ghcr.io"
  OWNER_NAME: "bestborirak"
  IMAGE_TAG: "0.0.1-SNAPSHOT"
  # ANGULAR_CLI_VERSION: "1.0.0-rc.1"
  # BUILD_UTIL_REPO: "corp-ais/mychannel-build-util"
  GIT_BRANCH: "main"
  PAT: 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
  # APP_PATH: "sales-portal"

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.17.1]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    # - run: npm test

    - name: "GHCR login"
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v2
      with:
        registry: ${{ env.CONTAINER_REPOSITORY }}
        username: ${{ github.actor }} 
        password: ${{ env.PAT }}

    # - name : "Build Docker Image"
    #   run: docker build -t $APP_NAME .

    # - name: "Docker GHCR login"
    #   run: |
    #     echo $PAT | docker login ${{ env.CONTAINER_REPOSITORY }} -u $OWNER_NAME --password-stdin
    #     docker tag $APP_NAME ${{ env.CONTAINER_REPOSITORY }}/${{ env.OWNER_NAME }}/${{ env.APP_NAME }}:${{env.IMAGE_TAG}}
    #     docker push ${{ env.CONTAINER_REPOSITORY }}/${{ env.OWNER_NAME }}/${{ env.APP_NAME }}:${{env.IMAGE_TAG}}

    - name: Build and push image
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/build-push-action@v4
      with:
        context: ./
        # file: ./Dockerfile-client
        push: true
        tags: ${{ env.CONTAINER_REPOSITORY }}/${{ env.OWNER_NAME }}/${{ env.APP_NAME }}:${{env.IMAGE_TAG}}

    
